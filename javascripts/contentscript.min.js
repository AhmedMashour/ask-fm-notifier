function callCounts() {
  console.log("checking count"),
    $(document).ready(() => {
      $.get(countsUrl + "?_=" + new Date().getTime(), function (e, t) {
        console.log("get ", t, "data", e),
          "nocontent" != t
            ? e != lastNumber && numberRegex.test(e)
              ? (askedToLog && (askedToLog = !1),
                parseInt(e),
                tracker.sendEvent("Notifications", "New Number", e),
                update_badge_number(e, "normal_notifications_no"),
                requestNotifications(e),
                (lastNumber = e),
                chrome.browserAction.setBadgeText({ text: e.toString() }))
              : numberRegex.test(e) ||
                askedToLog ||
                ((lastNumber = "0"),
                chrome.browserAction.setBadgeText({ text: e.toString() }),
                notifyMe(
                  "you're not logged to Ask.fm click her to login",
                  "https://ask.fm/login"
                ),
                (askedToLog = !0))
            : ((lastNumber = "0"),
              chrome.browserAction.setBadgeText({ text: "0" })),
          console.log("lastNumber is ", lastNumber);
      });
    });
}
function getCounts() {
  var e = new XMLHttpRequest();
  e.addEventListener("load", reqListener), e.open("GET", countsUrl), e.send();
}
function reqListener() {
  console.log("the respone from getting count", this.responseText);
}
function notifyMe(e, t, n) {
  let o = !1;
  if (((n = n || "New Notification"), "granted" != Notification.permission))
    console.log("premission isn't granted"), Notification.requestPermission();
  else {
    var s = new Notification(n, {
      icon: "assets/notify.png",
      body: e,
      timeout: 3e6,
    });
    (s.onclick = function () {
      (o = !0), window.open(t);
    }),
      setInterval(() => {
        o && s.close.bind(s);
      }, 5e3);
  }
}
function requestNotifications(e) {
  (numberOfNotifications = e - 1),
    $.get(
      "https://ask.fm/account/notifications/?_=" + new Date().getTime(),
      function (e, t) {
        if (
          (console.log(
            "status",
            t,
            "This Extension is Made By Mashhour, LIKE A BOSS"
          ),
          e)
        ) {
          let t = $.parseHTML(e);
          $("#appennd").append(t);
          let n = [];
          $(".streamItem_content").each(function (e, t) {
            let o = t.innerText,
              s = t.attributes.href.value,
              r = {};
            if (
              ((r.url = "https://ask.fm" + s),
              (r.text = o),
              n.push(r),
              parseInt(e) >= numberOfNotifications)
            )
              return $("#appennd").empty(), !1;
            console.log(e, t.innerText);
          }),
            n.reverse().forEach((e) => {
              notifyMe(e.text, e.url);
            });
        }
      }
    );
}
function updateUrl() {
  tracker.sendEvent("Notifications", "Button", "pressed"),
    chrome.tabs.create({ url: "ask.html" }),
    chrome.browserAction.setBadgeText({ text: "0" });
}

function checkFollowed(e) {
  let t = askFm + e;
  $.get(t + "?_=" + new Date().getTime(), function (t, n) {
    if (t) {
      let n = $.parseHTML(t);
      $("#friend").append(n);
      let o = 0;
      $(posts_selector) &&
        ((o = parseInt($(posts_selector)[0].innerText)),
        console.log("the count received", o),
        getFriendUserName((t, n) => {
          n &&
            (console.log("the friend", n),
            getLastCount(n, "answers", (t, n) => {
              if (!n)
                return update_answers_count(e, o), $("#friend").empty(), !1;
              {
                let t = 0;
                if ((console.log("save", n, "new", o), !(n < o)))
                  return $("#friend").empty(), !1;
                (t = o - n),
                  update_answers_count(e, o),
                  update_badge_number(t, "normal_notifications_no");
                let s = [];
                $(answer_item_selector);
                for (let e = 0; e < t; e++) {
                  (s[e] = {}),
                    (s[e].text = $(answer_item_selector)[e].innerText);
                  let t = $(stream_details)[0].children[0].attributes.href
                    .value;
                  s[e].url = "https://ask.fm" + t;
                }
                $("#friend").empty(),
                  s.reverse().forEach((t) => {
                    notifyMe(t.text, t.url, e);
                  });
              }
            }));
        })),
        console.log($("#friend"));
    }
  });
}
function callFriendsFeed(e) {
  getFriendUserName((e, t) => {
    t ? checkFollowed(t) : kill_interval("friend_interval");
  });
}
function message(e) {
  chrome.runtime.sendMessage({ greeting: e }, function (e) {
    console.log(e);
  });
}
function update_answers_count(e, t) {
  let n = e + "_answers_count",
    o = {};
  (o[n] = t),
    updateItem(o, () => {
      console.log("inserted count for first time", n);
    });
}
function analyze() {
  getItem("name", (e, t) => {
    if (t)
      tracker.sendEvent("Name", t, "Found"),
        console.log("the handler"),
        handleR(t);
    else {
      console.log("started");
      let e = /\"icon-tab-profile\" href=\"(.*)\"/,
        t = /class=\"profileStats_number\">(.*)</;
      $.get("https://ask.fm/account/wall?_=" + new Date().getTime(), function (
        n,
        o
      ) {
        console.log(n),
          (result = e.exec(n)),
          t.exec(n),
          result &&
            (console.log(result[2]),
            updateItem({ name: result[1] }, () => {
              console.log("updated");
            }),
            tracker.sendEvent("Name", result[1], "Not Found"),
            console.log("the handler"),
            handleR(result[1]));
      });
    }
  });
}

let countsUrl = "https://ask.fm/account/notifications/counts/",
  lastNumber = "0",
  numberRegex = /^\d+$/,
  askedToLog = !1,
  askFm = "https://ask.fm/",
  posts_selector = ".profileStats_number.profileTabAnswerCount",
  answer_item_selector = ".item.streamItem.streamItem-answer",
  stream_details = ".streamItem_details";
tracker.sendAppView("MainView"), callCounts(), callFriendsFeed();
var notify_interval = setInterval(callCounts, 12e4),
  friend_interval = setInterval(callFriendsFeed, 2e4);
function ch(e, t) {
  var n = 0,
    o = e.length,
    s = [];
  for (n = 0; n < o; n += t) (myChunk = e.slice(n, n + t)), s.push(myChunk);
  return s;
}

updateItem(
  { notify_interval: notify_interval, friend_interval: friend_interval },
  () => {
    console.log("inserted interval", notify_interval);
  }
),
  chrome.browserAction.onClicked.addListener(updateUrl),
  chrome.runtime.onMessage.addListener(function (e, t, n) {
    if (
      (console.log(
        t.tab ? "from a content script:" + t.tab.url : "from the extension"
      ),
      console.log("the request", e),
      console.log(e.kill_interval),
      e.kill_interval)
    ) {
      let t = e.kill_interval;
      console.log("the request to kill interval", t), clearInterval(t);
    } else if (e.start_interval) {
      let t = e.type;
      getItem(t, (e, n) => {
        n ? (clearInterval(n), startInterval(t)) : startInterval(t);
      });
    } else
      e.browserAction &&
        chrome.browserAction.setBadgeText({ text: e.num.toString() });
  });
