function getAnalyticsTracker() {
  return analytics.getService("notifier_app").getTracker("UA-110572721-1");
}
function getFriendUserName(e) {
  chrome.storage.sync.get("friend_user_name", (n) => {
    n && n.friend_user_name ? e(null, n.friend_user_name) : e("No Friends");
  });
}
function getLastCount(e, n, t) {
  if ("answers" == n) {
    let n = e + "_answers_count";
    chrome.storage.sync.get(n, (e) => {
      e && e[n]
        ? (console.log("the response", e), t(null, e[n]))
        : t("No Counts at First", null);
    });
  }
}
function insertFriend(e, n) {
  chrome.storage.sync.set(
    {
      friend_user_name: e,
      friend_status: "live",
      friend_notifications_no: null,
    },
    n
  );
}
function insertCount(e, n, t) {
  if ("answers" == type) {
    chrome.storage.sync.set({ entity: n }, t);
  }
}
function updateItem(e, n) {
  chrome.storage.sync.set(e, n);
}
function getItem(e, n) {
  chrome.storage.sync.get(e, (t) => {
    t && t[e] ? n(null, t[e]) : n("No " + e, null);
  });
}
function message(e, n) {
  chrome.runtime.sendMessage(e, function (e) {
    console.log(e), n && n(e);
  });
}
function start_interval(e, n) {
  getItem(e, (t, r) => {
    if (!r) {
      message({ start_interval: "true", type: e }, (e) => {
        n && n(null, e);
      });
    }
  });
}
function kill_interval(e, n) {
  getItem(e, (t, r) => {
    if (r) {
      console.log("we have interval", r);
      let t = { kill_interval: r, type: e },
        a = {};
      (a[e] = null),
        updateItem(a, () => {
          console.log("Removed interval");
        }),
        message(t, (e) => {
          n && n(null, e);
        });
    } else {
      let e = "we don't have interval";
      console.log(e), n && n(e, null);
    }
  });
}
function startInterval(e) {
  if ("notify_interval" == e) {
    callCounts();
    var n = setInterval(callCounts, 12e4);
    updateItem({ notify_interval: n }, () => {
      console.log("inserted interval", n);
    });
  } else if ("friend_interval" == e) {
    callFriendsFeed();
    updateItem({ friend_interval: setInterval(callFriendsFeed, 12e4) }, () => {
      console.log("inserted interval", n);
    });
  }
}
function update_badge_number(e, n, t) {
  (e = parseInt(e) || 0),
    getItem(n, (n, t) => {
      t && 0 != e
        ? ((t = parseInt(t)),
          updateItem({ type: (t += e) }, () => {
            add_notify_nums();
          }))
        : updateItem({ type: e }, () => {
            add_notify_nums();
          });
    });
}
function add_notify_nums() {
  getItem("normal_notifications_no", (e, n) => {
    (n = n ? parseInt(friend_num) : 0),
      getItem("friend_notifications_no", (e, t) => {
        let r = (t = t ? parseInt(t) : 0) + n;
        message({ browserAction: "badgeText", num: r }),
          updateItem({ badge_num: r }, () => {
            console.log("updated all badge nums");
          });
      });
  });
}
var tracker = getAnalyticsTracker();
